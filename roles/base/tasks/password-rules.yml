- name: Ensure PAM Enforces Password Requirements - Minimum Length - Ensure PAM variable minlen is set accordingly
  ansible.builtin.lineinfile:
    create: true
    dest: /etc/security/pwquality.conf
    regexp: ^#?\s*minlen
    line: minlen = {{ base_password_pam_minlen }}

- name: Ensure PAM Enforces Password Requirements - Minimum Different Categories - Ensure PAM variable minclass is set accordingly
  ansible.builtin.lineinfile:
    create: true
    dest: /etc/security/pwquality.conf
    regexp: ^#?\s*minclass
    line: minclass = {{ base_password_pam_minclass }}
  when: '"pam" in ansible_facts.packages'

- name: Set Password Maximum Age
  lineinfile:
    create: true
    dest: /etc/login.defs
    regexp: ^#?PASS_MAX_DAYS
    line: PASS_MAX_DAYS {{ base_accounts_maximum_age_login_defs }}

- name: Set Account Expiration Following Inactivity
  lineinfile:
    create: true
    dest: /etc/default/useradd
    regexp: ^INACTIVE
    line: INACTIVE={{ base_account_disable_post_pw_expiration }}
  when: '"shadow-utils" in ansible_facts.packages'

- name: Set Password Minimum Age
  lineinfile:
    create: true
    dest: /etc/login.defs
    regexp: ^#?PASS_MIN_DAYS
    line: PASS_MIN_DAYS {{ base_accounts_minimum_age_login_defs }}

- name: Collect users with not correct maximum time period between password changes
  ansible.builtin.command:
    cmd: awk -F':' '(/^[^:]+:[^!*]/ && ($5 > {{ base_accounts_maximum_age_login_defs }} || $5 == "")) {print $1}' /etc/shadow
  register: user_names

- name: Change the maximum time period between password changes
  ansible.builtin.user:
    user: '{{ item }}'
    password_expire_max: '{{ base_accounts_maximum_age_login_defs }}'
  with_items: '{{ user_names.stdout_lines }}'
  when: user_names.stdout_lines | length > 0

- name: Collect users with not correct minimum time period between password changes
  command: |
    awk -F':' '(/^[^:]+:[^!*]/ && ($4 < {{ base_accounts_minimum_age_login_defs }} || $4 == "")) {print $1}' /etc/shadow
  register: user_names

- name: Change the minimum time period between password changes
  command: |
    chage -m {{ base_accounts_minimum_age_login_defs }} {{ item }}
  with_items: '{{ user_names.stdout_lines }}'
  when: user_names.stdout_lines | length > 0

- name: Prevent Login to Accounts With Empty Password - Check if system relies on
    authselect
  ansible.builtin.stat:
    path: /usr/bin/authselect
  register: result_authselect_present

# - name: Prevent Login to Accounts With Empty Password - Remediate using authselect
#   block:

#   - name: Prevent Login to Accounts With Empty Password - Check integrity of authselect current profile
#     ansible.builtin.command:
#       cmd: authselect check
#     register: result_authselect_check_cmd
#     changed_when: false
#     failed_when: false

#   - name: Prevent Login to Accounts With Empty Password - Informative message based on the authselect integrity check result
#     ansible.builtin.assert:
#       that:
#       - result_authselect_check_cmd.rc == 0
#       fail_msg:
#       - authselect integrity check failed. Remediation aborted!
#       - This remediation could not be applied because an authselect profile was not
#         selected or the selected profile is not intact.
#       - It is not recommended to manually edit the PAM files when authselect tool
#         is available.
#       - In cases where the default authselect profile does not cover a specific demand,
#         a custom authselect profile is recommended.
#       success_msg:
#       - authselect integrity check passed

#   - name: Prevent Login to Accounts With Empty Password - Get authselect current features
#     ansible.builtin.shell:
#       cmd: authselect current | tail -n+3 | awk '{ print $2 }'
#     register: result_authselect_features
#     changed_when: false
#     when:
#     - result_authselect_check_cmd is success

#   - name: Prevent Login to Accounts With Empty Password - Ensure "without-nullok" feature is enabled using authselect tool
#     ansible.builtin.command:
#       cmd: authselect enable-feature without-nullok
#     register: result_authselect_enable_feature_cmd
#     when:
#     - result_authselect_check_cmd is success
#     - result_authselect_features.stdout is not search("without-nullok")

#   - name: Prevent Login to Accounts With Empty Password - Ensure authselect changes are applied
#     ansible.builtin.command:
#       cmd: authselect apply-changes -b
#     when:
#     - result_authselect_enable_feature_cmd is not skipped
#     - result_authselect_enable_feature_cmd is success
#   when:
#   - result_authselect_present.stat.exists

# - name: Prevent Login to Accounts With Empty Password - Remediate directly editing PAM files
#   ansible.builtin.replace:
#     dest: '{{ item }}'
#     regexp: nullok
#   loop:
#   - /etc/pam.d/system-auth
#   - /etc/pam.d/password-auth
#   when:
#   - not result_authselect_present.stat.exists